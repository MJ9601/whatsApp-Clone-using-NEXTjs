import React from "react";
import styled from "styled-components";
import { auth, db } from "../../firebase";
import { useGlobalState } from "../../globalStateProvider";
import { useAuthState } from "react-firebase-hooks/auth";
import Head from "next/head";
import Sidebar from "../../components/Sidebar";
import ChatRoom from "../../components/ChatRoom";
import CreateChatPopUp from "../../components/CreateChatPopUp";
import {
  collection,
  doc,
  getDoc,
  getDocs,
  orderBy,
  query,
} from "firebase/firestore";

const Chat = ({ chat, messages }) => {
  const [user] = useAuthState(auth);
  const [{ displayCreatePopup }, dispatch] = useGlobalState();
  const recipient = chat?.users.filter((_user) => _user != user.email)[0];

  return (
    <div>
      <Head>
        <title>Chat with {recipient}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Sidebar />
        <ChatRoom chat={chat} messages={messages} />
        {displayCreatePopup && <CreateChatPopUp />}
      </Container>
    </div>
  );
};

export default Chat;

export async function getServerSideProps(context) {
  const _docRef = doc(db, "chats", context.query.id);
  const _query = query(
    collection(_docRef, "messages"),
    orderBy("timestamp", "asc")
  );
  const messagesRes = await getDocs(_query);
  const messages = messagesRes.docs
    .map((doc) => ({
      id: doc.id,
      ...doc.data(),
    }))
    .map((messages) => ({
      ...messages,
      timestamp: messages.timestamp.toDate().getTime(),
    }));

  const chatRes = await getDoc(_docRef);
  const chat = {
    id: chatRes.id,
    ...chatRes.data(),
  };

  return {
    props: {
      messages: JSON.stringify(messages),
      chat: chat,
    },
  };
}

const Container = styled.div`
  display: flex;
  height: 100vh;
  width: 100%;
  position: relavite;
`;
